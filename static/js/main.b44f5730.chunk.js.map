{"version":3,"sources":["Filter/Filter.module.css","Container/Container.module.css","ContactForm/ContactsForm.module.css","Container/Container.jsx","ContactList/ContactList.jsx","ContactForm/ContactForm.jsx","Filter/Filter.jsx","App.js","index.js","ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","s","container","ContactList","contacts","onDeleteContact","contactList","map","id","name","number","contact","nameText","deleteBtn","type","onClick","ContactForm","state","nameInputId","shortid","generate","numberInputId","handleNameChange","e","currentTarget","value","setState","onSubmitForm","preventDefault","props","onSubmit","reset","form","this","formLabel","htmlFor","formInput","onChange","addBtn","Component","Filter","filterLabel","filterInput","App","filter","addContact","find","toLowerCase","alert","trim","test","deleteContact","contactId","prevState","formSubmitHandler","data","console","log","changeFilter","getFilteredContacts","normalizedFilter","includes","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b44f5730.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__1jV-P\",\"filterInput\":\"Filter_filterInput__1a-Yn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__Lbxcd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__25g7g\",\"formLabel\":\"ContactsForm_formLabel__MDE6M\",\"formInput\":\"ContactsForm_formInput__1SfEL\",\"addBtn\":\"ContactsForm_addBtn__23r-M\"};","import React from 'react';\r\nimport s from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={s.container}>{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\n\r\nexport default Container;\r\n    \r\n","import React from 'react';\r\nimport s from './ContactList.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className = {s.contactList}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className={s.contact} key={id}>\r\n        <p className ={s.nameText}>{name} : {number}</p>\r\n            \r\n             <button className = {s.deleteBtn} type =\"button\" onClick={()=> onDeleteContact(id)}>Удалить</button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = { \r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      number: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,      \r\n    })  \r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired \r\n}\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport s from './ContactsForm.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleNameChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n    };\r\n    \r\n    onSubmitForm = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state)\r\n\r\n        this.reset()\r\n    }\r\n\r\n      reset = () => {\r\n      this.setState({ name: '', number: '' });\r\n    };\r\n  render() {\r\n    return (     \r\n\r\n      <form className = {s.form} onSubmit = {this.onSubmitForm}>\r\n        <label className = {s.formLabel} htmlFor={this.nameInputId}>\r\n          Name\r\n          <input\r\n          className = {s.formInput}  \r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleNameChange}\r\n            id={this.nameInputId}\r\n          ></input>\r\n        </label>\r\n        <label className = {s.formLabel} htmlFor={this.numberInputId}>\r\n          Number \r\n          <input\r\n            className = {s.formInput}  \r\n            type=\"number\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleNameChange}\r\n            id = {this.numberInputId}\r\n          ></input>\r\n        </label>\r\n        <button className = {s.addBtn} type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {  \r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport s from './Filter.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.filterLabel}>\r\n    Search contact\r\n    <input className={s.filterInput} type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Container from './Container/Container';\nimport ContactList from './ContactList';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts.`);\n    } else if (contacts.find(contact => contact.number === number)) {\n      alert(`${number} is already in contacts.`);\n    } else if (name.trim() === '' || number.trim() === '') {\n      alert(\"Enter the contact's name and number phone!\");\n    } else if (!/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number)) {\n      alert('Enter the correct number phone!');\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  formSubmitHandler = data => {\n    console.log(data);\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} contacts={contacts} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__VvaiQ\",\"contact\":\"ContactList_contact__2_vce\",\"nameText\":\"ContactList_nameText__3DqM3\",\"deleteBtn\":\"ContactList_deleteBtn__3M8H1\"};"],"sourceRoot":""}